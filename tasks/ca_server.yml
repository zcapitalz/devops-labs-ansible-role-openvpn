---
- name: Install pip
  package:
    name: python3-pip
    state: present
    update_cache: true

- name: Install cryptography pip package
  pip:
    name: cryptography
    executable: pip3
  become: true

- import_tasks: install_easyrsa.yml

- name: Create OpenVPN directory
  file: 
    path: "{{ openvpn_ca_dir_path }}"
    state: directory
    mode: '0755'

- name: Check if PKI directory exists
  stat:
    path: "{{ openvpn_ca_dir_path }}/pki"
  register: pki_dir_stat
  
- name: Init PKI
  shell:
    chdir: "{{ openvpn_ca_dir_path }}"
    cmd: /usr/share/easy-rsa/easyrsa init-pki
  when: not pki_dir_stat.stat.exists

- name: Check if CA key exists
  stat:
    path: "{{ openvpn_ca_server_key_file_path }}"
  register: ca_key_file_stat

- name: Build CA
  shell: 
    chdir: "{{ openvpn_ca_dir_path }}"
    cmd: EASYRSA_BATCH=1 /usr/share/easy-rsa/easyrsa build-ca nopass
  when: not ca_key_file_stat.stat.exists

- name: Check if CRL file exists
  stat:
    path: "{{ openvpn_ca_server_crl_file_path }}"
  register: crl_file_stat

- name: Generate CRL
  shell: 
    chdir: "{{ openvpn_ca_dir_path }}"
    cmd: /usr/share/easy-rsa/easyrsa gen-crl
  when: not crl_file_stat.stat.exists

- name: Check if HMAC key file exists
  stat:
    path: "{{ openvpn_ca_server_hmac_file_path }}"
  register: hmac_file_stat

- name: Generate HMAC key
  shell: 
    chdir: "{{ openvpn_ca_dir_path }}"
    cmd: openvpn --genkey --secret ta.key
  when: not hmac_file_stat.stat.exists